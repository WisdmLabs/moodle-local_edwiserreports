{"version":3,"sources":["block_activeusers.js"],"names":["define","$","Chart","defaultConfig","V","common","cfg","activeUsersGraph","panel","getPanel","panelBody","panelTitle","panelFooter","dropdownMenu","dropdownItem","dropdownToggle","flatpickrCalender","chart","loader","dropdownButton","refreshBtn","exportUrlLink","filter","dropdownInput","listner","init","notifyListner","getActiveUsersBlockData","hide","show","ajax","url","requestUrl","data","action","sesskey","JSON","stringify","done","response","parse","graph","labels","fail","error","console","log","always","destroy","defaults","global","defaultFontFamily","fontFamily","defaultFontStyle","fontStyle","ctx","type","datasets","label","labelName","activeUsers","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointStyle","enrolments","completionRate","options","find","val","html","setInterval","inceamentUpdateTime","removeClass","fadeIn","parseInt","text","document","ready","getActiveUsersBlock","on","addClass","placeholder","attr","click","e","target","hasClass","parents","length","this","flatpickr","mode","altInput","altFormat","dateFormat","maxDate","appendTo","getElementById","onOpen","onClose","date","includes","changeExportUrl","filterReplaceFlag","selectedCustomDate"],"mappings":"AAAA,aAGAA,OAAO,CAAC,SAAU,eAAgB,qCAAsC,iCAAkC,WAAY,kCAAmC,SAAUC,EAAGC,EAAOC,EAAeC,EAAGC,GAE7L,IAAIC,EAAM,KACNC,EAAmB,KACnBC,EAAQL,EAAcM,SAAS,qBAC/BC,EAAYP,EAAcM,SAAS,oBAAqB,QACxDE,EAAaR,EAAcM,SAAS,oBAAqB,SACzDG,EAAcT,EAAcM,SAAS,oBAAqB,UAC1DI,EAAeL,EAAQ,mEACvBM,EAAeD,EAAe,kBAC9BE,EAAiBP,EAAQ,oCACzBQ,EAAoBR,EAAQ,sBAC5BS,EAAQP,EAAY,aACpBQ,EAASR,EAAY,WACrBS,EAAiBX,EAAQ,0BACzBY,EAAaT,EAAa,YAC1BU,EAAgBb,EAAQJ,EAAEiB,cAC1BC,EAAS,KACTC,EAAgBZ,EAAa,4BAC7Ba,EAAU,KA4Nd,MAAO,CACLC,KAvNF,SAAcC,GAgGZ,SAASC,EAAwBL,GAC/BrB,EAAEgB,GAAOW,OACT3B,EAAEiB,GAAQW,OAGLP,IACHA,EAAS,UAIXjB,EAAOa,OAAOW,KAAK,qBACnB5B,EAAE6B,KAAK,CACLC,IAAK5B,EAAc6B,WACnBC,KAAM,CACJC,OAAQ,kCACRC,QAASlC,EAAEO,GAAOyB,KAAK,WACvBA,KAAMG,KAAKC,UAAU,CACnBf,OAAQA,OAGXgB,KAAK,SAAUC,GAChBA,EAAWH,KAAKI,MAAMD,GACtBjC,EAAImC,MAAMR,KAAOM,EAASN,KAC1B3B,EAAImC,MAAMC,OAASH,EAASG,SAC3BC,KAAK,SAAUC,GAChBC,QAAQC,IAAIF,KACXG,OAAO,WAwCNxC,GACFA,EAAiByC,UAGnB9C,EAAM+C,SAASC,OAAOC,kBAAoB7C,EAAImC,MAAMW,WACpDlD,EAAM+C,SAASC,OAAOG,iBAAmB/C,EAAImC,MAAMa,UA5CjD/C,EA6CFA,EAAmB,IAAIL,EAAMI,EAAIiD,IAAK,CACpCC,KAAMlD,EAAImC,MAAMe,KAChBvB,KAYK,CACLS,OAAQpC,EAAImC,MAAMC,OAClBe,SAAU,CAAC,CACTC,MAAOpD,EAAImC,MAAMkB,UAAUC,YAC3B3B,KAAM3B,EAAImC,MAAMR,KAAK2B,YACrBC,gBAAiBvD,EAAImC,MAAMoB,gBAAgBD,YAC3CE,YAAaxD,EAAImC,MAAMqB,YAAYF,YACnCG,iBAAkBzD,EAAImC,MAAMqB,YAAYF,YACxCI,qBAAsB1D,EAAImC,MAAMqB,YAAYF,YAC5CK,WAAY3D,EAAImC,MAAMwB,YACrB,CACDP,MAAOpD,EAAImC,MAAMkB,UAAUO,WAC3BjC,KAAM3B,EAAImC,MAAMR,KAAKiC,WACrBL,gBAAiBvD,EAAImC,MAAMoB,gBAAgBK,WAC3CJ,YAAaxD,EAAImC,MAAMqB,YAAYI,WACnCH,iBAAkBzD,EAAImC,MAAMqB,YAAYI,WACxCF,qBAAsB1D,EAAImC,MAAMqB,YAAYI,WAC5CD,WAAY3D,EAAImC,MAAMwB,YACrB,CACDP,MAAOpD,EAAImC,MAAMkB,UAAUQ,eAC3BlC,KAAM3B,EAAImC,MAAMR,KAAKkC,eACrBN,gBAAiBvD,EAAImC,MAAMoB,gBAAgBM,eAC3CL,YAAaxD,EAAImC,MAAMqB,YAAYK,eACnCJ,iBAAkBzD,EAAImC,MAAMqB,YAAYK,eACxCH,qBAAsB1D,EAAImC,MAAMqB,YAAYK,eAC5CF,WAAY3D,EAAImC,MAAMwB,cApCxBG,QAAS9D,EAAImC,MAAM2B,UA9CnBnE,EAAEW,GAAayD,KAAK,wCAAwCC,IAAIhD,GAoBlErB,EAAEU,EAAa,gCAAgC4D,KAAK,GAjBlDC,YAAYC,EAAqB,KACjCxE,EAAEmB,GAAYsD,YAAY,gBAC1BzE,EAAEiB,GAAQU,OACV3B,EAAEgB,GAAO0D,OAAO,QAGhBnD,EAAQ,eAERnB,EAAOa,OAAOU,KAAK,uBAgBvB,SAAS6C,IACPxE,EAAEU,EAAa,gCAAgC4D,KAAKK,SAAS3E,EAAEU,EAAa,gCAAgCkE,QAAU,GAxJxHrD,EAAUE,EAGVzB,EAAE6E,UAAUC,MAAM,YAChBzE,EAAMH,EAAc6E,wBAIlB/E,EAAEc,GAAgBkE,GAAG,QAAS,WAC5BhF,EAAEY,GAAcqE,SAAS,UAI3BjF,EAAEsB,GAAewD,MAAM,WACrB,IAAII,EAAclF,EAAEsB,GAAe6D,KAAK,eACxCnF,EAAEsB,GAAe+C,IAAIa,KAIvBlF,EAAE6E,UAAUO,MAAM,SAAUC,GACpBrF,EAAEqF,EAAEC,QAAQC,SAAS,kBAAoBvF,EAAEqF,EAAEC,QAAQE,QAAQ,kBAAkBC,QACnFzF,EAAEY,GAAc6D,YAAY,UAKhCzE,EAAEa,EAAe,iBAAiBmE,GAAG,QAAS,WAC5C3D,EAASrB,EAAE0F,MAAMP,KAAK,SACtBnF,EAAEY,GAAc6D,YAAY,QAC5BzE,EAAEkB,GAAgBoD,KAAKtE,EAAE0F,MAAMd,QAC/BlD,EAAwBL,GACxBrB,EAAEe,GAAmBsD,IAAI,UACzBrE,EAAEsB,GAAe+C,IAAI,YAIvBrE,EAAEmB,GAAY6D,GAAG,QAAS,WACxBhF,EAAE0F,MAAMT,SAAS,gBACjBvD,EAAwBL,KAc5Bf,EAAmBoB,IACnB1B,EAAEe,GAAmB4E,UAAU,CAC7BC,KAAM,QACNC,UAAU,EACVC,UAAW,QACXC,WAAY,QACZC,QAAS,QACTC,SAAUpB,SAASqB,eAAe,uBAClCC,OAAQ,WACNnG,EAAEY,GAAcqE,SAAS,iBAE3BmB,QAAS,WACPpG,EAAEY,GAAc6D,YAAY,gBAC5BzE,EAAEY,GAAc6D,YAAY,QAUlC,WACEpD,EAASrB,EAAEe,GAAmBsD,MAC9B,IAAIgC,EAAOrG,EAAEsB,GAAe+C,MAGvBhD,EAAOiF,SAAS,QAIrBpG,EAAcqG,gBAAgBlF,EAAQD,EAAejB,EAAEqG,mBACvDxG,EAAEkB,GAAgBoD,KAAK+B,GACvBrG,EAAEe,GAAmBsD,IAAI,IACzB3C,EAAwBL,IArBpBoF,OAvBFlF,EAAQ","sourcesContent":["/* eslint-disable no-console */\r\ndefine([\r\n    'jquery',\r\n    'core/chartjs',\r\n    'local_edwiserreports/defaultconfig',\r\n    'local_edwiserreports/variables',\r\n    './common',\r\n    'local_edwiserreports/flatpickr'\r\n], function($, Chart, defaultConfig, V, common) {\r\n    /* Varible for active users block */\r\n    var cfg = null;\r\n    var activeUsersGraph = null;\r\n    var panel = defaultConfig.getPanel(\"#activeusersblock\");\r\n    var panelBody = defaultConfig.getPanel(\"#activeusersblock\", \"body\");\r\n    var panelTitle = defaultConfig.getPanel(\"#activeusersblock\", \"title\");\r\n    var panelFooter = defaultConfig.getPanel(\"#activeusersblock\", \"footer\");\r\n    var dropdownMenu = panel + \" .dropdown-menu[aria-labelledby='filter-dropdown']:not('custom')\";\r\n    var dropdownItem = dropdownMenu + \" .dropdown-item\";\r\n    var dropdownToggle = panel + \" #filter-dropdown.dropdown-toggle\";\r\n    var flatpickrCalender = panel + \" #flatpickrCalender\";\r\n    var chart = panelBody + \" .ct-chart\";\r\n    var loader = panelBody + \" .loader\";\r\n    var dropdownButton = panel + \" button#filter-dropdown\";\r\n    var refreshBtn = panelTitle + \" .refresh\";\r\n    var exportUrlLink = panel + V.exportUrlLink;\r\n    var filter = null;\r\n    var dropdownInput = panelTitle + \" input.form-control.input\";\r\n    var listner = null;\r\n\r\n    /**\r\n     * Initialize\r\n     * @param {Function} notifyListner Callback function\r\n     */\r\n    function init(notifyListner) {\r\n        listner = notifyListner;\r\n\r\n        /* Custom Dropdown hide and show */\r\n        $(document).ready(function() {\r\n            cfg = defaultConfig.getActiveUsersBlock();\r\n\r\n            // If course progress block is there\r\n            if (cfg) {\r\n                /* Show custom dropdown */\r\n                $(dropdownToggle).on(\"click\", function() {\r\n                    $(dropdownMenu).addClass(\"show\");\r\n                });\r\n\r\n                /* Added Custom Value in Dropdown */\r\n                $(dropdownInput).ready(function() {\r\n                    var placeholder = $(dropdownInput).attr(\"placeholder\");\r\n                    $(dropdownInput).val(placeholder);\r\n                });\r\n\r\n                /* Hide dropdown when click anywhere in the screen */\r\n                $(document).click(function(e) {\r\n                    if (!($(e.target).hasClass(\"dropdown-menu\") ||\r\n                        $(e.target).parents(\".dropdown-menu\").length)) {\r\n                        $(dropdownMenu).removeClass('show');\r\n                    }\r\n                });\r\n\r\n                /* Select filter for active users block */\r\n                $(dropdownItem + \":not(.custom)\").on('click', function() {\r\n                    filter = $(this).attr('value');\r\n                    $(dropdownMenu).removeClass('show');\r\n                    $(dropdownButton).html($(this).text());\r\n                    getActiveUsersBlockData(filter);\r\n                    $(flatpickrCalender).val(\"Custom\");\r\n                    $(dropdownInput).val(\"Custom\");\r\n                });\r\n\r\n                /* Refresh when click on the refresh button */\r\n                $(refreshBtn).on('click', function() {\r\n                    $(this).addClass(\"refresh-spin\");\r\n                    getActiveUsersBlockData(filter);\r\n                });\r\n\r\n                createDropdownCalendar();\r\n            } else {\r\n                /* Notify that this event is completed */\r\n                listner(\"activeUsers\");\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Create Calender in dropdown tp select range.\r\n         */\r\n        function createDropdownCalendar() {\r\n            /* Call function to initialize the active users block graph */\r\n            activeUsersGraph = getActiveUsersBlockData();\r\n\r\n            $(flatpickrCalender).flatpickr({\r\n                mode: 'range',\r\n                altInput: true,\r\n                altFormat: \"d/m/Y\",\r\n                dateFormat: \"Y-m-d\",\r\n                maxDate: \"today\",\r\n                appendTo: document.getElementById(\"activeUser-calendar\"),\r\n                onOpen: function() {\r\n                    $(dropdownMenu).addClass('withcalendar');\r\n                },\r\n                onClose: function() {\r\n                    $(dropdownMenu).removeClass('withcalendar');\r\n                    $(dropdownMenu).removeClass('show');\r\n                    selectedCustomDate();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * After Select Custom date get active users details.\r\n         */\r\n        function selectedCustomDate() {\r\n            filter = $(flatpickrCalender).val();\r\n            var date = $(dropdownInput).val();\r\n\r\n            /* If correct date is not selected then return false */\r\n            if (!filter.includes(\"to\")) {\r\n                return;\r\n            }\r\n\r\n            defaultConfig.changeExportUrl(filter, exportUrlLink, V.filterReplaceFlag);\r\n            $(dropdownButton).html(date);\r\n            $(flatpickrCalender).val(\"\");\r\n            getActiveUsersBlockData(filter);\r\n        }\r\n\r\n        /**\r\n         * Get data for active users block.\r\n         * @param {String} filter Filter string\r\n         */\r\n        function getActiveUsersBlockData(filter) {\r\n            $(chart).hide();\r\n            $(loader).show();\r\n\r\n            /* If filter is not set then select all */\r\n            if (!filter) {\r\n                filter = \"weekly\";\r\n            }\r\n\r\n            // Show loader.\r\n            common.loader.show('#activeusersblock');\r\n\r\n            $.ajax({\r\n                url: defaultConfig.requestUrl,\r\n                data: {\r\n                    action: 'get_activeusers_graph_data_ajax',\r\n                    sesskey: $(panel).data(\"sesskey\"),\r\n                    data: JSON.stringify({\r\n                        filter: filter\r\n                    })\r\n                },\r\n            }).done(function(response) {\r\n                response = JSON.parse(response);\r\n                cfg.graph.data = response.data;\r\n                cfg.graph.labels = response.labels;\r\n            }).fail(function(error) {\r\n                console.log(error);\r\n            }).always(function() {\r\n                activeUsersGraph = generateActiveUsersGraph();\r\n                // V.changeExportUrl(filter, exportUrlLink, V.filterReplaceFlag);\r\n                $(panelFooter).find('.download-links input[name=\"filter\"]').val(filter);\r\n\r\n                // Change graph variables\r\n                resetUpdateTime();\r\n                setInterval(inceamentUpdateTime, 1000 * 60);\r\n                $(refreshBtn).removeClass('refresh-spin');\r\n                $(loader).hide();\r\n                $(chart).fadeIn(\"slow\");\r\n\r\n                /* Notify that this event is completed */\r\n                listner(\"activeUsers\");\r\n\r\n                // Hide loader.\r\n                common.loader.hide('#activeusersblock');\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Reset Update time in panel header.\r\n         */\r\n        function resetUpdateTime() {\r\n            $(panelTitle + \" #updated-time > span.minute\").html(0);\r\n        }\r\n\r\n        /**\r\n         * Increament update time in panel header.\r\n         */\r\n        function inceamentUpdateTime() {\r\n            $(panelTitle + \" #updated-time > span.minute\")\r\n            .html(parseInt($(panelTitle + \" #updated-time > span.minute\").text()) + 1);\r\n        }\r\n\r\n        /**\r\n         * Generate Active Users graph.\r\n         * @returns {Object} Active users graph\r\n         */\r\n        function generateActiveUsersGraph() {\r\n            if (activeUsersGraph) {\r\n                activeUsersGraph.destroy();\r\n            }\r\n\r\n            Chart.defaults.global.defaultFontFamily = cfg.graph.fontFamily;\r\n            Chart.defaults.global.defaultFontStyle = cfg.graph.fontStyle;\r\n            activeUsersGraph = new Chart(cfg.ctx, {\r\n                type: cfg.graph.type,\r\n                data: getGraphData(),\r\n                options: cfg.graph.options\r\n            });\r\n            return activeUsersGraph;\r\n        }\r\n\r\n        /**\r\n         * Get graph data.\r\n         * @return {Object}\r\n         */\r\n        function getGraphData() {\r\n            return {\r\n                labels: cfg.graph.labels,\r\n                datasets: [{\r\n                    label: cfg.graph.labelName.activeUsers,\r\n                    data: cfg.graph.data.activeUsers,\r\n                    backgroundColor: cfg.graph.backgroundColor.activeUsers,\r\n                    borderColor: cfg.graph.borderColor.activeUsers,\r\n                    pointBorderColor: cfg.graph.borderColor.activeUsers,\r\n                    pointBackgroundColor: cfg.graph.borderColor.activeUsers,\r\n                    pointStyle: cfg.graph.pointStyle\r\n                },\r\n                {\r\n                    label: cfg.graph.labelName.enrolments,\r\n                    data: cfg.graph.data.enrolments,\r\n                    backgroundColor: cfg.graph.backgroundColor.enrolments,\r\n                    borderColor: cfg.graph.borderColor.enrolments,\r\n                    pointBorderColor: cfg.graph.borderColor.enrolments,\r\n                    pointBackgroundColor: cfg.graph.borderColor.enrolments,\r\n                    pointStyle: cfg.graph.pointStyle\r\n                },\r\n                {\r\n                    label: cfg.graph.labelName.completionRate,\r\n                    data: cfg.graph.data.completionRate,\r\n                    backgroundColor: cfg.graph.backgroundColor.completionRate,\r\n                    borderColor: cfg.graph.borderColor.completionRate,\r\n                    pointBorderColor: cfg.graph.borderColor.completionRate,\r\n                    pointBackgroundColor: cfg.graph.borderColor.completionRate,\r\n                    pointStyle: cfg.graph.pointStyle\r\n                }]\r\n            };\r\n        }\r\n    }\r\n\r\n    // Must return the init function\r\n    return {\r\n        init: init\r\n    };\r\n});\r\n"],"file":"block_activeusers.min.js"}