{"version":3,"sources":["block_customreports.js"],"names":["define","$","str","config","v","selectorTable","panel","getPanel","reportSelector","selectorType","downloadBtn","customDropdown","find","reportForm","getCheckboxesSelector","tableSelector","flatpickr","altInput","altFormat","dateFormat","maxDate","onClose","selectedDates","dateStr","instance","is","element","startTime","getTime","val","endTime","document","on","event","tableSelectorClass","checkboxes","target","prop","data","html","hide","type","destroy","show","customReportSelectors","rootContainer","filter","JSON","stringify","url","requestUrl","M","cfg","sesskey","dtConfig","columns","language","searchPlaceholder","emptyTable","DataTable","ajax","responsive","scrollY","scroller","loadingIndicator","scrollCollapse","scrollX","paging","bInfo","bSort","adjust","createSelectorTable","util","get_string","addClass","removeClass","setTimeout","length","filters","each","idx","ele","push","join"],"mappings":"AAAA,aAEAA,OAAO,CAAC,SAAU,WAAY,qCAAsC,iCAAkC,iCAAkC,yCAA0C,8CAA+C,SAAUC,EAAGC,EAAKC,EAAQC,GAKzP,IAAIC,EAAgB,KAMhBC,EAAQH,EAAOI,SAAS,sBAMxBC,EAAiBF,EAAQ,iCAMzBG,EAAe,UAMfC,EAAcJ,EAAQ,yBAMtBK,EAAiBV,EAAEK,GAAOM,KAAK,wBAM/BC,EAAaZ,EAAEK,GAAOM,KAAK,sBAa3BE,EAAwB,SAA+BC,GACzD,OAAOT,EAAQ,IAAMS,EAAgB,qCAqJvCd,EAAEK,GAAOM,KAAK,sBAAsBI,UAAU,CAC5CC,UAAU,EACVC,UAAW,QACXC,WAAY,QACZC,QAAS,QACTC,QAjJ4B,SAAiCC,EAAeC,EAASC,GAErF,GAAKF,EAAc,GAKnB,GAAIrB,EAAE,8BAA8BwB,GAAGD,EAASE,SAAU,CAExD,IAAIC,EAAYL,EAAc,GAAGM,UAEjCf,EAAWD,KAAK,8BAA8BiB,IAAIF,EAAY,UACzD,GAAI1B,EAAE,4BAA4BwB,GAAGD,EAASE,SAAU,CAC7D,IAAII,EAAUR,EAAc,GAAGM,UAE/Bf,EAAWD,KAAK,4BAA4BiB,IAAIC,EAAU,SAqI9D7B,EAAE8B,UAAUC,GAAG,QAAS,iDAAkD,WACxE/B,EAAE,2CAA2C4B,IAAI,IAEjDhB,EAAWD,KAAK,8BAA8BiB,IAAI,IAClDhB,EAAWD,KAAK,4BAA4BiB,IAAI,MAQlD5B,EAAE8B,UAAUC,GAAG,SAAU1B,EAAQ,iCAAkC,SAAU2B,GAE3E,IAAIC,EAAqB,gBAEL,OAAhBzB,IACFyB,EAAqB,aAIvB,IAAIC,EAAarB,EAAsBoB,GAEnCjC,EAAEgC,EAAMG,QAAQX,GAAG,YACrBxB,EAAEkC,GAAYE,KAAK,WAAW,GAE9BpC,EAAEkC,GAAYE,KAAK,WAAW,KAOlCpC,EAAE8B,UAAUC,GAAG,QAASxB,EAAgB,SAAUyB,GAChDxB,EAAeR,EAAEgC,EAAMG,QAAQE,KAAK,OAEpC3B,EAAe4B,KAAKtC,EAAEgC,EAAMG,QAAQG,QACpC5B,EAAe2B,KAAK,MAAO7B,GAE3B,IAAIyB,EAAqB,gBAEL,OAAhBzB,IACFyB,EAAqB,aAIvBjC,EAAEK,GAAOM,KAAK,UAAU4B,OAExB3B,EAAWD,KAAK,0BAA0BiB,IAAIpB,GAzHtB,SAA6BgC,EAAMP,GAEvD7B,GACFA,EAAcqC,UAIhBzC,EAAEK,EAAQ,oBAAoBqC,OAC9B1C,EAAEK,EAAQ,kCAAuC+B,KAAK,WAAW,GAEjE,IAAIO,EAAwB3C,EAAEK,GAAOM,KAAK,0BACtCiC,EAAgB5C,EAAEK,GAAOM,KAAK,kBAE9BkC,EAASC,KAAKC,UAAU,CAC1BP,KAAMA,IAGJQ,EAAM7C,EAAE8C,WAAa,mDAAqDC,EAAEC,IAAIC,QAAU,WAAaP,EAE3GD,EAAcF,OAEd,IAAIW,EAtEgB,OAsEcb,EArEzB,CACLc,QAAW,CAAC,CACVjB,KAAQ,UACP,CACDA,KAAQ,YACP,CACDA,KAAQ,aACP,CACDA,KAAQ,aACP,CACDA,KAAQ,WACP,CACDA,KAAQ,aAEVkB,SAAY,CACVC,kBAAqB,2BACrBC,WAAc,mCAIX,CACLH,QAAW,CAAC,CACVjB,KAAQ,UACP,CACDA,KAAQ,YACP,CACDA,KAAQ,aACP,CACDA,KAAQ,YACP,CACDA,KAAQ,aACP,CACDA,KAAQ,YAEVkB,SAAY,CACVC,kBAAqB,gBACrBC,WAAc,yBAmCpBrD,EAAgBuC,EAAsBhC,KAAKsB,GAAoBS,OAAOgB,UAAU,CAC9EC,KAAMX,EACNM,QAASD,EAASC,QAClBC,SAAUF,EAASE,SACnBK,YAAY,EACZC,QAAS,QACTC,SAAU,CACRC,kBAAkB,GAEpBC,gBAAgB,EAChBC,SAAS,EACTC,QAAQ,EACRC,OAAO,EACPC,OAAO,IACNd,QAAQe,SAsFXC,CAAoB9D,EAAcyB,KAMpCjC,EAAE8B,UAAUC,GAAG,QAAStB,EAAa,WAInC,GAvFIiB,EAAYd,EAAWD,KAAK,gCAAgCiB,OAGjD,KAFXC,EAAUjB,EAAWD,KAAK,8BAA8BiB,QAE1B,IAAbF,IAKjBG,EAAUH,EAoFZ,OAJA1B,EAAEK,GAAOM,KAAK,aAAa2B,KAAKY,EAAEqB,KAAKC,WAAW,yBAlOtC,yBAkO4EC,SAAS,QAAQC,YAAY,QACrHC,WAAW,WACT3E,EAAEK,GAAOM,KAAK,aAAa8D,SAAS,QAAQC,YAAY,SACvD,MACI,EA7Fc,IACnBhD,EACAG,EA+FAI,EAAqB,gBAEL,OAAhBzB,IACFyB,EAAqB,aAIvB,IAAIC,EAAarB,EAAsBoB,GAEvC,IAAKjC,EAAEkC,EAAa,YAAY0C,OAK9B,OAJA5E,EAAEK,GAAOM,KAAK,aAAa2B,KAAKY,EAAEqB,KAAKC,WAAW,2BApPtC,yBAoP8EC,SAAS,QAAQC,YAAY,QACvHC,WAAW,WACT3E,EAAEK,GAAOM,KAAK,aAAa8D,SAAS,QAAQC,YAAY,SACvD,MACI,EAGT,IAAIG,EAAU,GAMd,OALA7E,EAAEkC,EAAa,YAAY4C,KAAK,SAAUC,EAAKC,GAC7CH,EAAQI,KAAKjF,EAAEgF,GAAK3C,KAAK,SAG3BzB,EAAWD,KAAK,uBAAuBiB,IAAIiD,EAAQK,KAAK,OACjD","sourcesContent":["define([\r\n    'jquery',\r\n    'core/str',\r\n    'local_edwiserreports/defaultconfig',\r\n    'local_edwiserreports/variables',\r\n    'local_edwiserreports/flatpickr',\r\n    'local_edwiserreports/jquery.dataTables',\r\n    'local_edwiserreports/dataTables.bootstrap4'\r\n], function($, str, config, v) {\r\n    /**\r\n     * Selector datable variable\r\n     * @type {object | null}\r\n     */\r\n    var selectorTable = null;\r\n\r\n    /**\r\n     * Get panel of custom reports block\r\n     * @type {string}\r\n     */\r\n    var panel = config.getPanel(\"#customReportBlock\");\r\n\r\n    /**\r\n     * Report type selector\r\n     * @type {string}\r\n     */\r\n    var reportSelector = panel + ' .dropdown-menu .dropdown-item';\r\n\r\n    /**\r\n     * Report type selector\r\n     * @type {string}\r\n     */\r\n    var selectorType = 'courses';\r\n\r\n    /**\r\n     * Custom report download button\r\n     * @type {string}\r\n     */\r\n    var downloadBtn = panel + ' #customReportDownload';\r\n\r\n    /**\r\n     * Custom Report Download Dropdown\r\n     * @type {object}\r\n     */\r\n    var customDropdown = $(panel).find('#customReportDrodown');\r\n\r\n    /**\r\n     * Custom Reports form\r\n     * @type {object}\r\n     */\r\n    var reportForm = $(panel).find('#customReportsForm');\r\n\r\n    /**\r\n     * Plugin component\r\n     * @type {String}\r\n     */\r\n    var component = 'local_edwiserreports';\r\n\r\n    /**\r\n     * Get checkbox selector for table.\r\n     * @param {String} tableSelector Table id\r\n     * @returns {String} Checkbox selector\r\n     */\r\n    var getCheckboxesSelector = function(tableSelector) {\r\n        return panel + ' ' + tableSelector + ' ' + 'input[name^=customReportSelect-]';\r\n    };\r\n\r\n    /*\r\n     * Get custom report selectors\r\n     * It may be courses of learning program\r\n     * Courses | Learning Programs\r\n     */\r\n    var getCustomReportSelector = function(selectedDates, dateStr, instance) {\r\n        // If date not selected then return from here\r\n        if (!selectedDates[0]) {\r\n            return;\r\n        }\r\n\r\n        // Select date range\r\n        if ($('#wdmCustomReportEnrolStart').is(instance.element)) {\r\n            // Get starttime\r\n            var startTime = selectedDates[0].getTime();\r\n\r\n            // Set form value startdate\r\n            reportForm.find('input[name=enrolstartdate]').val(startTime / 1000);\r\n        } else if ($('#wdmCustomReportEnrolEnd').is(instance.element)) {\r\n            var endTime = selectedDates[0].getTime();\r\n\r\n            // Set form value enddate\r\n            reportForm.find('input[name=enrolenddate]').val(endTime / 1000);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get datatable config for report\r\n     * @param  {string} selectorType Report Type\r\n     * @return {object}            Datatable config\r\n     */\r\n    var getDatatableConfig = function(selectorType) {\r\n        if (selectorType == 'lps') {\r\n            return {\r\n                \"columns\": [\r\n                    {\"data\": \"select\"},\r\n                    {\"data\": \"fullname\"},\r\n                    {\"data\": \"shortname\"},\r\n                    {\"data\": \"startdate\"},\r\n                    {\"data\": \"enddate\"},\r\n                    {\"data\": \"duration\"},\r\n                ],\r\n                \"language\": {\r\n                    \"searchPlaceholder\": \"Search Learning Programs\",\r\n                    \"emptyTable\": \"There are no learning programs\"\r\n                }\r\n            };\r\n        } else {\r\n            return {\r\n                \"columns\": [\r\n                    {\"data\": \"select\"},\r\n                    {\"data\": \"fullname\"},\r\n                    {\"data\": \"shortname\"},\r\n                    {\"data\": \"category\"},\r\n                    {\"data\": \"startdate\"},\r\n                    {\"data\": \"enddate\"},\r\n                ],\r\n                \"language\": {\r\n                    \"searchPlaceholder\": \"Search Course\",\r\n                    \"emptyTable\": \"There are no courses\"\r\n                }\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creat Selector Table to select courses/lps\r\n     * @param  {String} type Selector type courses/lps\r\n     * @param  {String} tableSelectorClass Table selector class\r\n     */\r\n    var createSelectorTable = function(type, tableSelectorClass) {\r\n        // If table is already there then remove table\r\n        if (selectorTable) {\r\n            selectorTable.destroy();\r\n        }\r\n\r\n        // Show enrolment date selector\r\n        $(panel + \" .enrol-selector\").show();\r\n\r\n        $(panel + ' ' + 'input[name=\"selectAllCustom\"]').prop(\"checked\", false);\r\n\r\n        // Custom Report Selector Body\r\n        var customReportSelectors = $(panel).find('.customReportSelectors');\r\n        var rootContainer = $(panel).find('.rootContainer');\r\n\r\n        // Prepare filter to get selectors data\r\n        var filter = JSON.stringify({\r\n            type: type\r\n        });\r\n\r\n        // Prepare url to get selector related data\r\n        var url = v.requestUrl + '?action=get_customreport_selectors_ajax&sesskey=' + M.cfg.sesskey + '&filter=' + filter;\r\n\r\n        // Show custom report selectors\r\n        rootContainer.show();\r\n\r\n        // Get dataTable config\r\n        var dtConfig = getDatatableConfig(type);\r\n\r\n        // Get all courses/learningprogram\r\n        selectorTable = customReportSelectors.find(tableSelectorClass).show().DataTable({\r\n            ajax: url,\r\n            columns: dtConfig.columns,\r\n            language: dtConfig.language,\r\n            responsive: true,\r\n            scrollY: \"380px\",\r\n            scroller: {\r\n                loadingIndicator: true\r\n            },\r\n            scrollCollapse: true,\r\n            scrollX: true,\r\n            paging: false,\r\n            bInfo: false,\r\n            bSort: false\r\n        }).columns.adjust();\r\n    };\r\n\r\n    /**\r\n     * Validate form inputs\r\n     * @return {bool} status\r\n     */\r\n    var validateFormInputs = function() {\r\n        var startTime = reportForm.find('input[name=\"enrolstartdate\"]').val();\r\n        var endTime = reportForm.find('input[name=\"enrolenddate\"]').val();\r\n\r\n        // If enrolment date not selected\r\n        if (endTime == \"\" && startTime == \"\") {\r\n            return true;\r\n        }\r\n\r\n        // If end time greater the start time\r\n        if (endTime < startTime) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     *  Create flatpicker to select custom date range\r\n     */\r\n    $(panel).find('.custom-flatpicker').flatpickr({\r\n        altInput: true,\r\n        altFormat: \"d/m/Y\",\r\n        dateFormat: \"Y-m-d\",\r\n        maxDate: \"today\",\r\n        onClose: getCustomReportSelector\r\n    });\r\n\r\n    // Clear search input text\r\n    $(document).on('click', '.custom-flatpicker ~ button.input-search-close', function() {\r\n        $('.custom-flatpicker ~ input.form-control').val(\"\");\r\n\r\n        // Set form value startdate and enddate\r\n        reportForm.find('input[name=enrolstartdate]').val(\"\");\r\n        reportForm.find('input[name=enrolenddate]').val(\"\");\r\n    });\r\n\r\n    /**\r\n     * Check all courses/lps\r\n     * @param  {String} document).on('change', `${panel}   input[name [description]\r\n     * @return {[type]}                        [description]\r\n     */\r\n    $(document).on('change', panel + ' input[name=\"selectAllCustom\"]', function(event) {\r\n        // Get table selector\r\n        var tableSelectorClass = '.course-table';\r\n        if (selectorType == 'lps') {\r\n            tableSelectorClass = '.lp-table';\r\n        }\r\n\r\n        // Get checkboxes\r\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\r\n        if ($(event.target).is(':checked')) {\r\n            $(checkboxes).prop(\"checked\", true);\r\n        } else {\r\n            $(checkboxes).prop(\"checked\", false);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Get courses/lps when dropdown selected.\r\n     */\r\n    $(document).on('click', reportSelector, function(event) {\r\n        selectorType = $(event.target).data('val');\r\n\r\n        // Set dropdown value\r\n        customDropdown.html($(event.target).html());\r\n        customDropdown.data('val', selectorType);\r\n\r\n        // Get table selector\r\n        var tableSelectorClass = '.course-table';\r\n        if (selectorType == 'lps') {\r\n            tableSelectorClass = '.lp-table';\r\n        }\r\n\r\n        // Hide table in panel body\r\n        $(panel).find('.table').hide();\r\n\r\n        // Set form value\r\n        reportForm.find('input[name=reporttype]').val(selectorType);\r\n\r\n        // Create table for selectors table\r\n        createSelectorTable(selectorType, tableSelectorClass);\r\n    });\r\n\r\n    /**\r\n     * Download reports in csv format\r\n     */\r\n    $(document).on('click', downloadBtn, function() {\r\n        /**\r\n         * Validate forms input\r\n         */\r\n        if (!validateFormInputs()) {\r\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportdatefailed', component))\r\n                .addClass('show').removeClass('hide');\r\n            setTimeout(function() {\r\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\r\n            }, 5000);\r\n            return false;\r\n        }\r\n\r\n        // Get table selector\r\n        var tableSelectorClass = '.course-table';\r\n        if (selectorType == 'lps') {\r\n            tableSelectorClass = '.lp-table';\r\n        }\r\n        // Get checkboxes\r\n        var checkboxes = getCheckboxesSelector(tableSelectorClass);\r\n        // If no data selected\r\n        if (!$(checkboxes + ':checked').length) {\r\n            $(panel).find('#errorMsg').html(M.util.get_string('customreportselectfailed', component))\r\n                .addClass('show').removeClass('hide');\r\n            setTimeout(function() {\r\n                $(panel).find('#errorMsg').addClass('hide').removeClass('show');\r\n            }, 5000);\r\n            return false;\r\n        }\r\n\r\n        var filters = [];\r\n        $(checkboxes + ':checked').each(function(idx, ele) {\r\n            filters.push($(ele).data('id'));\r\n        });\r\n\r\n        // Set form value\r\n        reportForm.find('input[name=filters]').val(filters.join(\",\"));\r\n        return true;\r\n    });\r\n});\r\n"],"file":"block_customreports.min.js"}