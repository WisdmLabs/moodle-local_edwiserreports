{"version":3,"sources":["block_queryreport.js"],"names":["define","$","cfg","Templates","document","ready","loader","select2","multiple","closeOnSelect","placeholder","maximumSelectionLength","selectedLps","on","event","show","values","currentTarget","find","each","i","selected","val","JSON","stringify","html","siblings","oldIndex","indexOf","newIndex","splice","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","sesskey","M","lpids","done","response","context","courses","render","then","js","replaceNodeContents","fail","ex","console","log","error","always","length","hide","selectedRPM","cohortids","rpmids","template","lps","appendNodeContents","users","selectedCourses","selectedCohort","selectedUsers","panel","getPanel","reportForm","createFlatpicker","selector","startdate","maxdate","flatpickr","mode","altInput","altFormat","dateFormat","maxDate","defaultDate","onClose","getDateSelectorData","onReady","selectedDates","dateStr","instance","time","getTime","element","is","validateCustomQueryReportForm","checkedFields","formData","serializeArray","idx","name","value","setTimeout","preventDefault","enrolstartdate","enrolenddate","completionstartdate","completionenddate","key","push","id","rpms","userids","activitytype","getFilters","Date","setDate","getDate","click","this","closest","attr","prop","removeAttr"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\ndefine([\r\n    'jquery',\r\n    'local_edwiserreports/defaultconfig',\r\n    'core/templates',\r\n    'local_edwiserreports/select2'\r\n], function(\r\n    $, cfg, Templates\r\n) {\r\n    $(document).ready(function() {\r\n        /**\r\n         * Loader HTML String\r\n         * @type {String}\r\n         */\r\n        var loader = '<span class=\"px-10 py-5 pull-right\"><i class=\"fa fa-spinner fa-spin\"></i></span>';\r\n\r\n        // Add select2 for the dropdowns\r\n        $('#ed_rpm').select2({\r\n            multiple: true,\r\n            closeOnSelect: false,\r\n            placeholder: \"Reporting Managers\"\r\n        });\r\n        $('#ed_lps').select2({\r\n            multiple: true,\r\n            closeOnSelect: false,\r\n            placeholder: \"Learning Programs\"\r\n        });\r\n        $('#ed_courses').select2({\r\n            multiple: true,\r\n            closeOnSelect: false,\r\n            placeholder: \"Courses\"\r\n        });\r\n        $('#ed_cohorts').select2({\r\n            multiple: true,\r\n            closeOnSelect: false,\r\n            placeholder: \"Cohorts\"\r\n        });\r\n        $('#ed_users').select2({\r\n            multiple: true,\r\n            closeOnSelect: false,\r\n            placeholder: \"Users\"\r\n        });\r\n        $('#ed_activitytype').select2({\r\n            maximumSelectionLength: 1,\r\n            multiple: true,\r\n            closeOnSelect: true,\r\n            placeholder: \"Activity Type\"\r\n        });\r\n\r\n\r\n        // Change Learning Programs and accordignly get courses\r\n        var selectedLps = [\"0\"];\r\n        $('#ed_lps').on('change', function(event) {\r\n            $(\"div[class^='lp']\").show();\r\n\r\n            var values = [];\r\n            // Copy all option values from selected\r\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\r\n                values[i] = $(selected).val();\r\n            });\r\n\r\n            if (JSON.stringify(selectedLps) !== JSON.stringify(values)) {\r\n                $(\"#ed_courses\").html('')\r\n                    .siblings('.select2-container')\r\n                    .find('.select2-selection')\r\n                    .html(loader);\r\n\r\n                var oldIndex = selectedLps.indexOf(\"0\"),\r\n                    newIndex = values.indexOf(\"0\");\r\n\r\n                switch (true) {\r\n                    case (oldIndex == -1 && newIndex > -1):\r\n                        // Assign the selected courses\r\n                        values = [\"0\"];\r\n                        selectedLps = values;\r\n                        $(\"#ed_lps\").select2('val', values);\r\n                        break;\r\n                    case (oldIndex > -1 && newIndex > -1):\r\n                        values.splice(newIndex, 1);\r\n\r\n                        // Assign the selected courses\r\n                        selectedLps = values;\r\n                        $(\"#ed_lps\").select2('val', values);\r\n                        break;\r\n                }\r\n\r\n                selectedLps = values;\r\n\r\n                $.ajax({\r\n                    url: cfg.requestUrl,\r\n                    type: cfg.requestType,\r\n                    dataType: cfg.requestDataType,\r\n                    data: {\r\n                        action: 'get_customqueryreport_data_ajax',\r\n                        sesskey: M.cfg.sesskey,\r\n                        data: JSON.stringify({\r\n                            lpids: values\r\n                        })\r\n                    },\r\n                })\r\n                    .done(function(response) {\r\n                        $(\"#ed_courses\").html('');\r\n                        var template = \"local_edwiserreports/customquery_options\";\r\n                        var context = {courses: response};\r\n                        Templates.render(template, context).then(function(html, js) {\r\n                            Templates.replaceNodeContents($(\"#ed_courses\"), html, js);\r\n                            return;\r\n                        }).fail(function(ex) {\r\n                            console.log(ex);\r\n                        });\r\n                    })\r\n                    .fail(function(error) {\r\n                        console.log(error);\r\n                    }).always(function() {\r\n                        $(\"#ed_courses\").select2({\r\n                            multiple: true,\r\n                            closeOnSelect: false,\r\n                            placeholder: \"Courses\"\r\n                        });\r\n                    });\r\n\r\n                // Hide checkboxes of Learning programs if LP is not selected\r\n                if (!values.length) {\r\n                    $(\"div[class^='lp']\").hide();\r\n                }\r\n            }\r\n        });\r\n        // Reporting manager dropdown change\r\n        var selectedRPM = [\"0\"];\r\n        $('#ed_rpm').on('change', function(event) {\r\n            var values = [];\r\n            // Copy all option values from selected\r\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\r\n                values[i] = $(selected).val();\r\n            });\r\n\r\n            var cohortids = [];\r\n            $(\"#ed_cohorts\").find(\"option:selected\").each(function(i, selected) {\r\n                cohortids[i] = $(selected).val();\r\n            });\r\n\r\n            if (JSON.stringify(selectedRPM) !== JSON.stringify(values)) {\r\n                $(\"div[class^='rpm']\").show();\r\n                $(\"#ed_lps\").html('')\r\n                    .siblings('.select2-container')\r\n                    .find('.select2-selection')\r\n                    .html(loader);\r\n                $(\"#ed_courses\").html('')\r\n                    .siblings('.select2-container')\r\n                    .find('.select2-selection')\r\n                    .html(loader);\r\n                $(\"#ed_users\").html('')\r\n                    .siblings('.select2-container')\r\n                    .find('.select2-selection')\r\n                    .html(loader);\r\n\r\n                var oldIndex = selectedRPM.indexOf(\"0\");\r\n                var newIndex = values.indexOf(\"0\");\r\n\r\n                switch (true) {\r\n                    case (oldIndex == -1 && newIndex > -1):\r\n                        // Assign the selected courses\r\n                        values = [\"0\"];\r\n                        selectedRPM = values;\r\n                        $(\"#ed_rpm\").select2('val', values);\r\n                        break;\r\n                    case (oldIndex > -1 && newIndex > -1):\r\n                        values.splice(newIndex, 1);\r\n\r\n                        // Assign the selected courses\r\n                        selectedRPM = values;\r\n                        $(\"#ed_rpm\").select2('val', values);\r\n                        break;\r\n                }\r\n\r\n                selectedRPM = values;\r\n\r\n                $.ajax({\r\n                    url: cfg.requestUrl,\r\n                    type: cfg.requestType,\r\n                    dataType: cfg.requestDataType,\r\n                    data: {\r\n                        action: 'get_customqueryreport_rpm_data_ajax',\r\n                        sesskey: M.cfg.sesskey,\r\n                        data: JSON.stringify({\r\n                            rpmids: values,\r\n                            cohortids: cohortids\r\n                        })\r\n                    },\r\n                })\r\n                .done(function(response) {\r\n                    $(\"#ed_lps\").html('');\r\n                    $(\"#ed_courses\").html('');\r\n                    var template = \"local_edwiserreports/customquery_lpoptions\";\r\n                    var context = {lps: response.lps};\r\n                    if (response.lps.length > 0) {\r\n                        Templates.render(template, context).then(function(html, js) {\r\n                            Templates.appendNodeContents($(\"#ed_lps\"), html, js);\r\n                            return;\r\n                        }).fail(function(ex) {\r\n                            console.log(ex);\r\n                        });\r\n                    }\r\n                    if (response.courses.length > 0) {\r\n                        template = \"local_edwiserreports/customquery_options\";\r\n                        context = {courses: response.courses};\r\n                        Templates.render(template, context).then(function(html, js) {\r\n                            Templates.appendNodeContents($(\"#ed_courses\"), html, js);\r\n                            return;\r\n                        }).fail(function(ex) {\r\n                            console.log(ex);\r\n                        });\r\n                    }\r\n\r\n                    // Render users\r\n                    if (response.users.length > 0) {\r\n                        template = \"local_edwiserreports/customquery_lpoptions\"; // Work same as lp filter\r\n                        context = {lps: response.users}; // Work same as lp filters\r\n                        if (response.users.length > 0) {\r\n                            Templates.render(template, context).then(function(html, js) {\r\n                                Templates.appendNodeContents($(\"#ed_users\"), html, js);\r\n                                return;\r\n                            }).fail(function(ex) {\r\n                                console.log(ex);\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .fail(function(error) {\r\n                    console.log(error);\r\n                }).always(function() {\r\n                    $(\"#ed_lps\").select2({\r\n                        multiple: true,\r\n                        closeOnSelect: false,\r\n                        placeholder: \"Learning Programs\"\r\n                    });\r\n                    $(\"#ed_courses\").select2({\r\n                        multiple: true,\r\n                        closeOnSelect: false,\r\n                        placeholder: \"Courses\"\r\n                    });\r\n                    $(\"#ed_users\").select2({\r\n                        multiple: true,\r\n                        closeOnSelect: false,\r\n                        placeholder: \"Users\"\r\n                    });\r\n                });\r\n\r\n                // Hide checkboxes of Learning programs if LP is not selected\r\n                if (!values.length) {\r\n                    $(\"div[class^='rpm']\").hide();\r\n                    $(\"div[class^='lp']\").hide();\r\n                }\r\n            }\r\n        });\r\n        // Courses dropdown change\r\n        var selectedCourses = [\"0\"];\r\n        $('#ed_courses').on('change', function(event) {\r\n            var values = [];\r\n\r\n            // Copy all option values from selected\r\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\r\n                values[i] = $(selected).val();\r\n            });\r\n\r\n            if (JSON.stringify(selectedCourses) !== JSON.stringify(values)) {\r\n                var oldIndex = selectedCourses.indexOf(\"0\");\r\n                var newIndex = values.indexOf(\"0\");\r\n\r\n                switch (true) {\r\n                    case (oldIndex == -1 && newIndex > -1):\r\n                        // Assign the selected courses\r\n                        values = [\"0\"];\r\n                        selectedCourses = values;\r\n                        $(\"#ed_courses\").select2('val', values);\r\n                        break;\r\n                    case (oldIndex > -1 && newIndex > -1):\r\n                        values.splice(newIndex, 1);\r\n\r\n                        // Assign the selected courses\r\n                        selectedCourses = values;\r\n                        $(\"#ed_courses\").select2('val', values);\r\n                        break;\r\n                }\r\n\r\n                selectedCourses = values;\r\n            }\r\n        });\r\n\r\n        // Cohort dropdown change\r\n        var selectedCohort = [\"0\"];\r\n        $('#ed_cohorts').on('change', function(event) {\r\n            var values = [];\r\n\r\n            // Copy all option values from selected\r\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\r\n                values[i] = $(selected).val();\r\n            });\r\n\r\n            var rpmids = [];\r\n            // Copy all option values from selected\r\n            $(\"#ed_rpm\").find(\"option:selected\").each(function(i, selected) {\r\n                rpmids[i] = $(selected).val();\r\n            });\r\n\r\n            if (JSON.stringify(selectedCohort) !== JSON.stringify(values)) {\r\n                $(\"#ed_users\").html('')\r\n                    .siblings('.select2-container')\r\n                    .find('.select2-selection')\r\n                    .html(loader);\r\n\r\n                var oldIndex = selectedCohort.indexOf(\"0\");\r\n                var newIndex = values.indexOf(\"0\");\r\n\r\n                switch (true) {\r\n                    case (oldIndex == -1 && newIndex > -1):\r\n                        // Assign the selected courses\r\n                        values = [\"0\"];\r\n                        selectedCohort = values;\r\n                        $(\"#ed_cohorts\").select2('val', values);\r\n                        break;\r\n                    case (oldIndex > -1 && newIndex > -1):\r\n                        values.splice(newIndex, 1);\r\n\r\n                        // Assign the selected courses\r\n                        selectedCohort = values;\r\n                        $(\"#ed_cohorts\").select2('val', values);\r\n                        break;\r\n                }\r\n\r\n                selectedCohort = values;\r\n\r\n                // Load only cohort based users\r\n                $.ajax({\r\n                    url: cfg.requestUrl,\r\n                    type: cfg.requestType,\r\n                    dataType: cfg.requestDataType,\r\n                    data: {\r\n                        action: 'get_customqueryreport_cohort_users_ajax',\r\n                        sesskey: M.cfg.sesskey,\r\n                        data: JSON.stringify({\r\n                            cohortids: values,\r\n                            rpmids: rpmids\r\n                        })\r\n                    },\r\n                })\r\n                    .done(function(response) {\r\n                        var template = \"local_edwiserreports/customquery_lpoptions\"; // Work same as lp filter\r\n                        var context = {lps: response.users}; // Work same as lp filters\r\n                        if (response.users.length > 0) {\r\n                            Templates.render(template, context).then(function(html, js) {\r\n                                Templates.appendNodeContents($(\"#ed_users\"), html, js);\r\n                                return;\r\n                            }).fail(function(ex) {\r\n                                console.log(ex);\r\n                            });\r\n                        }\r\n                    })\r\n                    .fail(function(error) {\r\n                        console.log(error);\r\n                    }).always(function() {\r\n                        $(\"#ed_users\").select2({\r\n                            multiple: true,\r\n                            closeOnSelect: false,\r\n                            placeholder: \"Users\"\r\n                        });\r\n                    });\r\n            }\r\n        });\r\n\r\n        // Cohort dropdown change\r\n        var selectedUsers = [\"-1\"];\r\n        $('#ed_users').on('change', function(event) {\r\n            var values = [];\r\n\r\n            // Copy all option values from selected\r\n            $(event.currentTarget).find(\"option:selected\").each(function(i, selected) {\r\n                values[i] = $(selected).val();\r\n            });\r\n\r\n            if (JSON.stringify(selectedUsers) !== JSON.stringify(values)) {\r\n                var oldIndex = selectedUsers.indexOf(\"0\");\r\n                var newIndex = values.indexOf(\"0\");\r\n\r\n                switch (true) {\r\n                    case (oldIndex == -1 && newIndex > -1):\r\n                        // Assign the selected courses\r\n                        values = [\"0\"];\r\n                        selectedUsers = values;\r\n                        $(\"#ed_users\").select2('val', values);\r\n                        break;\r\n                    case (oldIndex > -1 && newIndex > -1):\r\n                        values.splice(newIndex, 1);\r\n\r\n                        // Assign the selected courses\r\n                        selectedUsers = values;\r\n                        $(\"#ed_users\").select2('val', values);\r\n                        break;\r\n                }\r\n\r\n                selectedUsers = values;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Get panel of custom reports block\r\n         * @type {string}\r\n         */\r\n        var panel = cfg.getPanel(\"#customQueryReportBlock\");\r\n\r\n        /**\r\n         * Report form\r\n         * @type {Object}\r\n         */\r\n        let reportForm = $(panel).find('#customQueryReportsForm');\r\n\r\n        /**\r\n         * Create flatpicker\r\n         * @param  {String} selector  Selector id\r\n         * @param  {string} type      picker type\r\n         * @param  {string} startdate Start data\r\n         * @param  {string} maxdate   End date\r\n         */\r\n        const createFlatpicker = function(selector, type, startdate, maxdate) {\r\n            $(panel).find(selector).flatpickr({\r\n                mode: type,\r\n                altInput: true,\r\n                altFormat: \"d/m/Y\",\r\n                dateFormat: \"Y-m-d\",\r\n                maxDate: maxdate,\r\n                defaultDate: startdate,\r\n                onClose: getDateSelectorData,\r\n                onReady: getDateSelectorData\r\n            });\r\n        };\r\n\r\n        /*\r\n         * Get custom report selectors\r\n         * It may be courses of learning program\r\n         * Courses | Learning Programs\r\n         */\r\n        const getDateSelectorData = function(selectedDates, dateStr, instance) {\r\n            // Get selected time\r\n            const time = selectedDates[0].getTime() / 1000;\r\n\r\n            // Set values according to the selector\r\n            switch (true) {\r\n                case $(instance.element).is('#customqueryenrollstart'):\r\n                    reportForm.find('input[name=enrolstartdate]').val(time);\r\n                    break;\r\n\r\n                case $(instance.element).is('#customqueryenrollend'):\r\n                    reportForm.find('input[name=enrolenddate]').val(time);\r\n                    break;\r\n\r\n                case $(instance.element).is('#customquerycompletionstart'):\r\n                    reportForm.find('input[name=completionstartdate]').val(time);\r\n                    break;\r\n\r\n                case $(instance.element).is('#customquerycompletionend'):\r\n                    reportForm.find('input[name=completionenddate]').val(time);\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Create selectors for flatpicker\r\n        /**\r\n         * Flat Picker Selectors\r\n         * @type {String}\r\n         */\r\n        const flatPickerSelectorStart = '#customqueryenrollstart, #customquerycompletionstart';\r\n        const flatPickerSelectorEnd = '#customqueryenrollend, #customquerycompletionend';\r\n        const threeMothsAgo = new Date().setDate(new Date().getDate() - 90);\r\n        createFlatpicker(flatPickerSelectorStart, 'single', threeMothsAgo, 'today');\r\n        createFlatpicker(flatPickerSelectorEnd, 'single', 'today', 'today');\r\n\r\n        // Clear search input text\r\n        $(document).on('click', '#customqueryenrollstart ~ button.input-search-close', function() {\r\n            $('#customqueryenrollstart ~ input.form-control').val(\"\");\r\n\r\n            // Set form value startdate\r\n            reportForm.find('input[name=enrolstartdate]').val(\"\");\r\n        });\r\n\r\n        $(document).on('click', '#customqueryenrollend ~ button.input-search-close', function() {\r\n            $('#customqueryenrollend ~ input.form-control').val(\"\");\r\n\r\n            // Set form value enddate\r\n            reportForm.find('input[name=enrolenddate]').val(\"\");\r\n        });\r\n\r\n        // Clear search input text\r\n        $(document).on('click', '#customquerycompletionstart ~ button.input-search-close', function() {\r\n            $('#customquerycompletionstart ~ input.form-control').val(\"\");\r\n\r\n            // Set form value startdate\r\n            reportForm.find('input[name=completionenddate]').val(\"\");\r\n        });\r\n\r\n        // Clear search input text\r\n        $(document).on('click', '#customquerycompletionend ~ button.input-search-close', function() {\r\n            $('#customquerycompletionend ~ input.form-control').val(\"\");\r\n\r\n            // Set form value enddate\r\n            reportForm.find('input[name=completionstartdate]').val(\"\");\r\n        });\r\n\r\n        /**\r\n         * Function ti get the selected fileds from checkboxes.\r\n         */\r\n        function getSelectedFields() {\r\n            var checkedFields = [];\r\n            $(panel).find(\"input[type=checkbox]:checked\").each(function(key, value) {\r\n                checkedFields.push(value.id);\r\n            });\r\n            reportForm.find('input[name=reporttype]').val(\"queryReport\");\r\n            reportForm.find('input[name=checkedFields]').val(checkedFields);\r\n        }\r\n\r\n        /**\r\n         * Function to get filtered values.\r\n         */\r\n        function getFilters() {\r\n            // Get Selected Reporting Managers\r\n            var rpms = [];\r\n            rpms = $(panel).find(\"#ed_rpm\").val();\r\n            reportForm.find('input[name=reportingmanagers]').val(rpms);\r\n            // Get selected Learning Programs\r\n            var lps = [];\r\n            lps = $(panel).find(\"#ed_lps\").val();\r\n            reportForm.find('input[name=lps]').val(lps);\r\n            // Get selected Courses\r\n            var courses = [];\r\n            courses = $(panel).find(\"#ed_courses\").val();\r\n            reportForm.find('input[name=courses]').val(courses);\r\n\r\n            // Get selected cohorts\r\n            var cohortids = [];\r\n            cohortids = $(panel).find(\"#ed_cohorts\").val();\r\n            reportForm.find('input[name=cohortids]').val(cohortids);\r\n\r\n            // Get selected users\r\n            var userids = [];\r\n            userids = $(panel).find(\"#ed_users\").val();\r\n            reportForm.find('input[name=userids]').val(userids);\r\n\r\n            // Get selected activity type\r\n            var activitytype = [];\r\n            activitytype = $(panel).find(\"#ed_activitytype\").val();\r\n            reportForm.find('input[name=activitytype]').val(activitytype);\r\n        }\r\n\r\n        /**\r\n         * Validate the custom report form\r\n         * @param {DOM} element Dom element\r\n         */\r\n        function validateCustomQueryReportForm(element) {\r\n            // Get courses\r\n            const courses = $(\"#ed_courses > option:selected\").length;\r\n\r\n            // Formdata\r\n            const formData = reportForm.serializeArray();\r\n\r\n            // Get form data for validation\r\n            const data = {};\r\n            $.each(formData, function(idx, val) {\r\n                data[val.name] = val.value;\r\n            });\r\n\r\n            // Validate form data\r\n            if (courses < 1) {\r\n                $(\".coursealert\").show();\r\n                setTimeout(function() {\r\n                    $(\".coursealert\").hide();\r\n                }, 3000);\r\n                element.preventDefault();\r\n            } else if (\r\n                (data.enrolstartdate > data.enrolenddate) ||\r\n                (data.enrolstartdate == \"\" && data.enrolenddate !== \"\") ||\r\n                (data.enrolstartdate !== \"\" && data.enrolenddate == \"\")\r\n            ) {\r\n                $(\".enroldatealert\").show();\r\n                setTimeout(function() {\r\n                    $(\".enroldatealert\").hide();\r\n                }, 3000);\r\n                element.preventDefault();\r\n            } else if (\r\n                (data.completionstartdate > data.completionenddate) ||\r\n                (data.completionstartdate == \"\" && data.completionenddate !== \"\") ||\r\n                (data.completionstartdate !== \"\" && data.completionenddate == \"\")\r\n            ) {\r\n                $(\".completiondatealert\").show();\r\n                setTimeout(function() {\r\n                    $(\".completiondatealert\").hide();\r\n                }, 3000);\r\n                element.preventDefault();\r\n            } else {\r\n                getSelectedFields();\r\n                getFilters();\r\n            }\r\n        }\r\n\r\n        // Get selected fields and filter values on click of download reports\r\n        $(\"#customQueryReportDownload\").click(function(element) {\r\n            validateCustomQueryReportForm(element);\r\n        });\r\n\r\n        // Handle alert for course selection\r\n        $(\"[data-hide]\").on(\"click\", function() {\r\n            $(this).closest(\".\" + $(this).attr(\"data-hide\")).hide();\r\n        });\r\n\r\n        // Unselect all fields\r\n        $('.reportfields a[class^=\"unselect-\"]').on('click', function() {\r\n            $(this).closest('.reportfields')\r\n                .find('input[type=\"checkbox\"]:not(:disabled)')\r\n                .prop(\"checked\", false);\r\n            $(this).hide().siblings('a[class^=\"select-\"]').show();\r\n        });\r\n\r\n        // Select  all fields\r\n        $('.reportfields a[class^=\"select-\"]').on('click', function() {\r\n            $(this).closest('.reportfields')\r\n                .find('input[type=\"checkbox\"]:not(:disabled)')\r\n                .prop(\"checked\", true);\r\n            $(this).hide().siblings('a[class^=\"unselect-\"]').show();\r\n        });\r\n\r\n        // Select and unselect on click of checkbox\r\n        $(panel).find('.checkbox-custom').on('click', function() {\r\n            const allCheckboxCount = $(this).closest('.reportfields')\r\n                .find('input[type=\"checkbox\"]').length;\r\n            const selectedCheckboxCount = $(this).closest('.reportfields')\r\n                .find('input[type=\"checkbox\"]:checked').length;\r\n\r\n            // If all checkboxes are seleced\r\n            if (allCheckboxCount == selectedCheckboxCount) {\r\n                $(this).closest('.reportfields')\r\n                    .find('a[class^=\"select-\"]')\r\n                    .hide().siblings('a[class^=\"unselect-\"]').show();\r\n            } else {\r\n                $(this).closest('.reportfields')\r\n                    .find('a[class^=\"unselect-\"]')\r\n                    .hide().siblings('a[class^=\"select-\"]').show();\r\n            }\r\n        });\r\n\r\n        // On change of activity plugin\r\n        var reportsTypeSelector = \"#edw_custom_reporttype input[type='radio']\";\r\n        $(panel).find(reportsTypeSelector).on('change', function() {\r\n            if ($(this).val() == 'activities') {\r\n                $(panel).find('#ed_activitytype').closest('.activitytype.select').show();\r\n                $(panel).find('.activityreportfields').show();\r\n                $(panel).find('.activityfields input[type=\"checkbox\"]').attr(\"checked\", true);\r\n            } else {\r\n                $(panel).find('#ed_activitytype').closest('.activitytype.select').hide();\r\n                $(panel).find('.activityreportfields').hide();\r\n                $(panel).find('.activityfields input[type=\"checkbox\"]').removeAttr(\"checked\");\r\n            }\r\n\r\n            $(reportForm).find('input[name=\"reportlevel\"]').val($(this).val());\r\n        });\r\n    });\r\n});\r\n"],"file":"block_queryreport.min.js"}