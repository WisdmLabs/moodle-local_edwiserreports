{"version":3,"sources":["lpdetailedreport.js"],"names":["define","$","str","v","filter","JSON","stringify","type","component","checkboxeSelector","reportForm","translation","get_strings","key","url","requestUrl","M","cfg","sesskey","then","dtConfig","columns","data","language","searchPlaceholder","util","get_string","emptyTable","DataTable","ajax","responsive","scrollY","scroller","loadingIndicator","scrollCollapse","scrollX","paging","bInfo","bSort","adjust","document","on","event","target","is","prop","length","show","hide","panel","find","addClass","removeClass","setTimeout","filters","each","idx","ele","push","val","join","submit"],"mappings":"AAAA,aAEAA,OAAO,CAAC,SAAU,WAAY,kCAAmC,SAAUC,EAAGC,EAAKC,GAKjF,IAAIC,EAASC,KAAKC,UAAU,CAC1BC,KAAM,QAOJC,EAAY,uBAMZC,EAAoB,0CAYpBC,EAAaT,EAAE,8BAMfU,EAAcT,EAAIU,YAAY,CAAC,CACjCC,IAAK,YACLL,UAAWA,GACV,CACDK,IAAK,qBACLL,UAAWA,KAGTM,EAAMX,EAAEY,WAAa,mDAAqDC,EAAEC,IAAIC,QAAU,WAAad,EAG3GO,EAAYQ,KAAK,WAEf,IAAIC,EAAW,CACbC,QAAW,CAAC,CACVC,KAAQ,UACP,CACDA,KAAQ,YACP,CACDA,KAAQ,aACP,CACDA,KAAQ,aACP,CACDA,KAAQ,WACP,CACDA,KAAQ,aAEVC,SAAY,CACVC,kBAAqBR,EAAES,KAAKC,WAAW,YAAalB,GACpDmB,WAAcX,EAAES,KAAKC,WAAW,qBAAsBlB,KAI1DP,EAAE,qBAAqB2B,UAAU,CAC/BC,KAAMf,EACNO,QAASD,EAASC,QAClBE,SAAUH,EAASG,SACnBO,YAAY,EACZC,QAAS,QACTC,SAAU,CACRC,kBAAkB,GAEpBC,gBAAgB,EAChBC,SAAS,EACTC,QAAQ,EACRC,OAAO,EACPC,OAAO,IACNjB,QAAQkB,SAKXtC,EAAEuC,UAAUC,GAAG,SAAU,gCAAiC,SAAUC,GAE9DzC,EAAEyC,EAAMC,QAAQC,GAAG,YACrB3C,EAAEQ,GAAmBoC,KAAK,WAAW,GAErC5C,EAAEQ,GAAmBoC,KAAK,WAAW,KAOzC5C,EAAEuC,UAAUC,GAAG,SAAU,qCAAsC,WACxDxC,EAAEQ,EAAoB,YAAYqC,OAIrC7C,EAjFY,yBAiFG8C,QAHf9C,EAAE,iCAAiC4C,KAAK,WAAW,GACnD5C,EA/EY,yBA+EG+C,UASnB/C,EAAEuC,UAAUC,GAAG,QAxFC,wBAwFqB,WAEnC,IAAKxC,EAAEQ,EAAoB,YAAYqC,OAKrC,OAJA7C,EAAEgD,OAAOC,KAAK,aAAaC,SAAS,QAAQC,YAAY,QACxDC,WAAW,WACTpD,EAAEgD,OAAOC,KAAK,aAAaC,SAAS,QAAQC,YAAY,SACvD,MACI,EAGT,IAAIE,EAAU,GAQd,OAPArD,EAAEQ,EAAoB,YAAY8C,KAAK,SAAUC,EAAKC,GACpDH,EAAQI,KAAKzD,EAAEwD,GAAKnC,KAAK,SAG3BZ,EAAWwC,KAAK,uBAAuBS,IAAIL,EAAQM,KAAK,MAExDlD,EAAWmD,UACJ","sourcesContent":["define([\r\n    'jquery',\r\n    'core/str',\r\n    'local_edwiserreports/variables'\r\n], function(\r\n    $,\r\n    str,\r\n    v\r\n) {\r\n    /**\r\n     * Learning Program filter\r\n     * @type {[type]}\r\n     */\r\n    var filter = JSON.stringify({\r\n        type: 'lps'\r\n    });\r\n\r\n    /**\r\n     * Plugin Component\r\n     * @type {String}\r\n     */\r\n    var component = 'local_edwiserreports';\r\n\r\n    /**\r\n     * Checkbox selector\r\n     * @type {String}\r\n     */\r\n    var checkboxeSelector = '.lp-table [name^=\"customReportSelect-\"]';\r\n\r\n    /**\r\n     * Download Learning program detailed reports btn selector\r\n     * @type {String}\r\n     */\r\n    var downloadBtn = '#wdm-lpdetailedreport';\r\n\r\n    /**\r\n     * Learning Program Detailed Report form\r\n     * @type {Object}\r\n     */\r\n    var reportForm = $('#wdm-lpdetailedreport-form');\r\n\r\n    /**\r\n     * Get translation to use strings\r\n     * @type {object}\r\n     */\r\n    var translation = str.get_strings([\r\n        {key: 'searchlps', component: component},\r\n        {key: 'nolearningprograms', component: component},\r\n    ]);\r\n\r\n    // Prepare url to get selector related data\r\n    var url = v.requestUrl + '?action=get_customreport_selectors_ajax&sesskey=' + M.cfg.sesskey + '&filter=' + filter;\r\n\r\n    // When translation is ready\r\n    // eslint-disable-next-line promise/catch-or-return\r\n    translation.then(function() {\r\n        // Datatable configurations\r\n        var dtConfig = {\r\n            \"columns\": [\r\n                {\"data\": \"select\"},\r\n                {\"data\": \"fullname\"},\r\n                {\"data\": \"shortname\"},\r\n                {\"data\": \"startdate\"},\r\n                {\"data\": \"enddate\"},\r\n                {\"data\": \"duration\"},\r\n            ],\r\n            \"language\": {\r\n                \"searchPlaceholder\": M.util.get_string('searchlps', component),\r\n                \"emptyTable\": M.util.get_string('nolearningprograms', component)\r\n            }\r\n        };\r\n\r\n        // Create Datatable for modal\r\n        $('#wdm-lplist-table').DataTable({\r\n            ajax: url,\r\n            columns: dtConfig.columns,\r\n            language: dtConfig.language,\r\n            responsive: true,\r\n            scrollY: \"250px\",\r\n            scroller: {\r\n                loadingIndicator: true\r\n            },\r\n            scrollCollapse: true,\r\n            scrollX: true,\r\n            paging: false,\r\n            bInfo: false,\r\n            bSort: false\r\n        }).columns.adjust();\r\n\r\n        /**\r\n         * Select all for learning program\r\n         */\r\n        $(document).on('change', 'input[name=\"selectAllCustom\"]', function(event) {\r\n            // Checked/unchecked checkboxes\r\n            if ($(event.target).is(':checked')) {\r\n                $(checkboxeSelector).prop(\"checked\", true);\r\n            } else {\r\n                $(checkboxeSelector).prop(\"checked\", false);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Operations on checkbox select\r\n         */\r\n        $(document).on('change', '.modal-body input[type=\"checkbox\"]', function() {\r\n            if (!$(checkboxeSelector + \":checked\").length) {\r\n                $('input[name=\"selectAllCustom\"]').prop(\"checked\", false);\r\n                $(downloadBtn).hide();\r\n            } else {\r\n                $(downloadBtn).show();\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Download reports in csv format\r\n         */\r\n        $(document).on('click', downloadBtn, function() {\r\n            // If no data selected\r\n            if (!$(checkboxeSelector + \":checked\").length) {\r\n                $(panel).find('#errorMsg').addClass('show').removeClass('hide');\r\n                setTimeout(function() {\r\n                    $(panel).find('#errorMsg').addClass('hide').removeClass('show');\r\n                }, 5000);\r\n                return false;\r\n            }\r\n\r\n            var filters = [];\r\n            $(checkboxeSelector + \":checked\").each(function(idx, ele) {\r\n                filters.push($(ele).data('id'));\r\n            });\r\n\r\n            // Set form value\r\n            reportForm.find('input[name=filters]').val(filters.join(\",\"));\r\n\r\n            // Submit form on download button\r\n            reportForm.submit();\r\n            return true;\r\n        });\r\n        return;\r\n    });\r\n});\r\n"],"file":"lpdetailedreport.min.js"}