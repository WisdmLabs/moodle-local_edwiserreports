{"version":3,"sources":["lpstats.js"],"names":["define","$","Templates","Fragment","ModalFactory","ModalEvents","str","V","init","CONTEXTID","PageId","LpSelect","LpTable","loader","filterSection","LpDropdown","find","Table","lpExportDetail","lpListModal","component","translation","get_strings","key","cohortId","addLpStatsTable","lpid","destroy","hide","show","loadFragment","cohortid","done","response","context","JSON","parse","render","then","html","js","replaceNode","fail","ex","console","log","always","DataTable","dom","oLanguage","sEmptyTable","responsive","document","ready","select2","remove","val","cohortFilterItem","on","this","data","cohortFilterBtn","text","changeExportUrl","exportUrlLink","cohortReplaceFlag","filterReplaceFlag","trigger","create","title","M","util","get_string","modal","root","getRoot","cancel","setBody","sesskey","formaction","cfg","wwwroot"],"mappings":"AAAA,aAGAA,OAAO,CAAC,SAAU,iBAAkB,gBAAiB,qBAAsB,oBAAqB,WAAY,iCAAkC,+BAAgC,SAAUC,EAAGC,EAAWC,EAAUC,EAAcC,EAAaC,EAAKC,GA8I9O,MAAO,CACLC,KA1IF,SAAcC,GACZ,IAAIC,EAAS,0BACTC,EAAW,iBACXC,EAAUF,EAAS,UACnBG,EAASH,EAAS,WAClBI,EAAgBb,EAAE,8CAClBc,EAAad,EAAES,GAAQM,KAAK,oBAC5BC,EAAQ,KAMRC,EAAiBjB,EAAE,iCACnBkB,EAAc,KAMdC,EAAY,uBAMZC,EAAcf,EAAIgB,YAAY,CAAC,CACjCC,IAAK,mBACLH,UAAWA,KAGTI,EAAW,EAwEf,SAASC,EAAgBC,EAAMF,GACzBP,IACFA,EAAMU,UACN1B,EAAEW,GAASgB,OACX3B,EAAEY,GAAQgB,QAGG1B,EAAS2B,aAAa,uBAAwB,UAAWrB,EAAW,CACjFiB,KAAMA,EACNK,SAAUP,IAEHQ,KAAK,SAAUC,GACtB,IAAIC,EAAUC,KAAKC,MAAMH,GAEzB/B,EAAUmC,OAAO,mCAAoCH,GAASI,KAAK,SAAUC,EAAMC,GACjFtC,EAAUuC,YAAY7B,EAAS2B,EAAMC,KAEpCE,KAAK,SAAUC,GAChBC,QAAQC,IAAIF,KACXG,OAAO,WACR7C,EAAEW,GAASiB,OACXZ,EAAQhB,EAAEW,GAASmC,UAAU,CAC3BC,IAAK,uBACLC,UAAW,CACTC,YAAa,kDAEfC,YAAY,IAEdlD,EAAEY,GAAQe,WAnGhB3B,EAAEmD,UAAUC,MAAM,WAChBvC,EAAcyB,KAAKxB,EAAWwB,QAC9BtC,EAAEmD,UAAUpC,KAAKL,GAAU2C,UAC3BrD,EAAEmD,UAAUpC,KAAKL,GAAUkB,OAC3Bd,EAAWwC,SACX,IAAI7B,EAAOzB,EAAEmD,UAAUpC,KAAKL,GAAU6C,MACtC/B,EAAgBC,EAAMF,GAGtBvB,EAAEM,EAAEkD,kBAAkBC,GAAG,QAAS,WAChClC,EAAWvB,EAAE0D,MAAMC,KAAK,YACxB3D,EAAEM,EAAEsD,iBAAiBtB,KAAKtC,EAAE0D,MAAMG,QAClCvD,EAAEwD,gBAAgBvC,EAAUjB,EAAEyD,cAAezD,EAAE0D,mBAC/CxC,EAAgBC,EAAMF,KAExBvB,EAAEmD,UAAUpC,KAAKL,GAAU+C,GAAG,SAAU,WACtCzD,EAAEW,GAASgB,OACX3B,EAAEY,GAAQgB,OACVH,EAAOzB,EAAEmD,UAAUpC,KAAKL,GAAU6C,MAClCjD,EAAEwD,gBAAgBrC,EAAMnB,EAAEyD,cAAezD,EAAE2D,mBAC3CzC,EAAgBC,EAAMF,KAIxBN,EAAewC,GAAG,QAAS,WAS7B,IAA8BS,EAAAA,EARLjD,EAUnBC,EACFA,EAAYU,OAIZR,EAAYiB,KAAK,WAEflC,EAAagE,OAAO,CAClBC,MAAOC,EAAEC,KAAKC,WAAW,mBAAoBpD,IAC5C+C,GAASnC,KAAK,SAAUyC,GAEzB,IAAIC,EAAOD,EAAME,UAEjBxD,EAAcsD,EACdC,EAAKhB,GAAGrD,EAAYuE,OAAQ,WAC1BH,EAAM7C,SAGR6C,EAAMI,QAAQ3E,EAAUmC,OAAO,wCAAyC,CACtEyC,QAAS7E,EAAES,GAAQkD,KAAK,WACxBmB,WAAYT,EAAEU,IAAIC,QAAU,wCAG9BR,EAAM5C","sourcesContent":["/* eslint-disable no-console */\r\ndefine([\r\n    'jquery',\r\n    'core/templates',\r\n    'core/fragment',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'core/str',\r\n    'local_edwiserreports/variables',\r\n    'local_edwiserreports/common'\r\n], function(\r\n    $,\r\n    Templates,\r\n    Fragment,\r\n    ModalFactory,\r\n    ModalEvents,\r\n    str,\r\n    V\r\n) {\r\n    /**\r\n     * Initialize\r\n     * @param {integer} CONTEXTID Current page context id\r\n     */\r\n    function init(CONTEXTID) {\r\n        var PageId = \"#wdm-lpstats-individual\";\r\n        var LpSelect = \"#wdm-lp-select\";\r\n        var LpTable = PageId + \" .table\";\r\n        var loader = PageId + \" .loader\";\r\n        var filterSection = $(\"#wdm-userfilter .row .col-md-6:first-child\");\r\n        var LpDropdown = $(PageId).find(\"#wdm-lp-dropdown\");\r\n        var Table = null;\r\n\r\n        /**\r\n         * Learning program export detailed report button\r\n         * @type {[type]}\r\n         */\r\n        var lpExportDetail = $(\"#wdm-export-detail-lpsreports\");\r\n        var lpListModal = null;\r\n\r\n        /**\r\n         * Plugin Component\r\n         * @type {String}\r\n         */\r\n        var component = 'local_edwiserreports';\r\n\r\n        /**\r\n         * Get translation to use strings\r\n         * @type {object}\r\n         */\r\n        var translation = str.get_strings([\r\n            {key: 'lpdetailedreport', component: component}\r\n        ]);\r\n\r\n        // Varibales for cohort filter\r\n        var cohortId = 0;\r\n\r\n        $(document).ready(function() {\r\n            filterSection.html(LpDropdown.html());\r\n            $(document).find(LpSelect).select2();\r\n            $(document).find(LpSelect).show();\r\n            LpDropdown.remove();\r\n\r\n            var lpid = $(document).find(LpSelect).val();\r\n            addLpStatsTable(lpid, cohortId);\r\n\r\n            /* Select cohort filter for active users block */\r\n            $(V.cohortFilterItem).on('click', function() {\r\n                cohortId = $(this).data('cohortid');\r\n                $(V.cohortFilterBtn).html($(this).text());\r\n                V.changeExportUrl(cohortId, V.exportUrlLink, V.cohortReplaceFlag);\r\n                addLpStatsTable(lpid, cohortId);\r\n            });\r\n\r\n            $(document).find(LpSelect).on(\"change\", function() {\r\n                $(LpTable).hide();\r\n                $(loader).show();\r\n\r\n                lpid = $(document).find(LpSelect).val();\r\n                V.changeExportUrl(lpid, V.exportUrlLink, V.filterReplaceFlag);\r\n                addLpStatsTable(lpid, cohortId);\r\n            });\r\n\r\n            /* Export Detailed Report */\r\n            lpExportDetail.on('click', function() {\r\n                exportDetailedReport(lpExportDetail);\r\n            });\r\n        });\r\n\r\n        /**\r\n         * Export Detailed Report\r\n         * @param {Objcet} trigger Trigger dom element\r\n         */\r\n        function exportDetailedReport(trigger) {\r\n            // If modal already exist then show modal\r\n            if (lpListModal) {\r\n                lpListModal.show();\r\n            } else {\r\n                // When translation is redy then create modal\r\n                // eslint-disable-next-line promise/catch-or-return\r\n                translation.then(function() {\r\n                    // Create Learning Program Modal\r\n                    ModalFactory.create({\r\n                        title: M.util.get_string(\r\n                            'lpdetailedreport', component\r\n                        )\r\n                    }, trigger).done(function(modal) {\r\n                        // Get modal root\r\n                        var root = modal.getRoot();\r\n\r\n                        // Set global Modal\r\n                        lpListModal = modal;\r\n                        root.on(ModalEvents.cancel, function() {\r\n                            modal.hide();\r\n                        });\r\n\r\n                        // Set Modal Body\r\n                        modal.setBody(Templates.render(\r\n                            'local_edwiserreports/lpdetailedreport', {\r\n                            sesskey: $(PageId).data('sesskey'),\r\n                            formaction: M.cfg.wwwroot + \"/local/edwiserreports/download.php\"\r\n                        }\r\n                        ));\r\n\r\n                        // Show learning program modal\r\n                        modal.show();\r\n                    });\r\n                    return;\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Add Lp stats table in learning program page\r\n         * @param {int} lpid     Learning Program ID\r\n         * @param {int} cohortId Cohort ID\r\n         */\r\n        function addLpStatsTable(lpid, cohortId) {\r\n            if (Table) {\r\n                Table.destroy();\r\n                $(LpTable).hide();\r\n                $(loader).show();\r\n            }\r\n\r\n            var fragment = Fragment.loadFragment(\r\n                'local_edwiserreports',\r\n                'lpstats',\r\n                CONTEXTID,\r\n                {\r\n                    lpid: lpid,\r\n                    cohortid: cohortId\r\n                }\r\n            );\r\n\r\n            fragment.done(function(response) {\r\n                var context = JSON.parse(response);\r\n                // eslint-disable-next-line promise/catch-or-return\r\n                Templates.render('local_edwiserreports/lpstatsinfo', context)\r\n                .then(function(html, js) {\r\n                    Templates.replaceNode(LpTable, html, js);\r\n                    return;\r\n                }).fail(function(ex) {\r\n                    console.log(ex);\r\n                }).always(function() {\r\n                    $(LpTable).show();\r\n                    Table = $(LpTable).DataTable({\r\n                        dom: \"<'pull-left'f><t><p>\",\r\n                        oLanguage: {\r\n                            sEmptyTable: \"No Users are enrolled in any Learning Programs\"\r\n                        },\r\n                        responsive: true\r\n                    });\r\n                    $(loader).hide();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        init: init\r\n    };\r\n\r\n});\r\n"],"file":"lpstats.min.js"}