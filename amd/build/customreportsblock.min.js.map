{"version":3,"sources":["customreportsblock.js"],"names":["define","$","ajax","cfCheckbox","cfSelect","cfCohort","cfCourse","cfPreviewTable","cfPreviewLoader","selector","show","this","removeClass","addClass","hide","cfPreview","empty","getCustomReportsData","selectedFields","each","push","val","call","methodname","args","params","JSON","stringify","fields","cohort","courses","length","done","response","success","clear","destroy","html","data","parse","console","log","DataTable","columns","reportsdata","bInfo","bFilter","searching","lengthChange","drawCallback","always","init","document","ready","on"],"mappings":"AAAA,aAEAA,OAAO,CAAC,SAAU,YAAa,yCAA0C,8CAA+C,SAAUC,EAAGC,GAGnI,IAAIC,EAAa,gCACbC,EAAW,4CACXC,EAAW,qBACXC,EAAW,qBACXC,EAAiB,KACjBC,EAAkB,CACpBC,SAAU,wDACVC,KAAM,WACJT,EAAEU,KAAKF,UAAUG,YAAY,UAAUC,SAAS,WAElDC,KAAM,WACJb,EAAEU,KAAKF,UAAUG,YAAY,UAAUC,SAAS,YAGhDE,EAAY,CACdN,SAAU,iDACVC,KAAM,WACJT,EAAEU,KAAKF,SAAW,iBAAiBG,YAAY,UAAUC,SAAS,UAClEL,EAAgBM,QAElBA,KAAM,WACJb,EAAEU,KAAKF,SAAW,iBAAiBG,YAAY,UAAUC,SAAS,UAClEL,EAAgBE,QAElBM,MAAO,WACLf,EAAEU,KAAKF,SAAW,UAAUG,YAAY,UAAUC,SAAS,UAC3DZ,EAAEU,KAAKF,SAAW,gBAAgBG,YAAY,UAAUC,SAAS,UACjEL,EAAgBM,SAIpB,SAASG,IACP,IAAIC,EAAiB,GACrBjB,EAAEE,EAAa,YAAYgB,KAAK,WAC9BD,EAAeE,KAAKnB,EAAEU,MAAMU,SAE9B,IAAIJ,EAAuBf,EAAKoB,KAAK,CAAC,CACpCC,WAAY,8CACZC,KAAM,CACJC,OAAQC,KAAKC,UAAU,CACrBC,OAAQV,EACRW,OAAQ5B,EAAEI,GAAUgB,MACpBS,QAAS,CAAC7B,EAAEK,GAAUe,aAKC,GAAzBH,EAAea,OACjBhB,EAAUC,SAEVD,EAAUD,OACVG,EAAqB,GAAGe,KAAK,SAAUC,GACrC,GAAIA,EAASC,QAAS,CAChB3B,IACFA,EAAe4B,QAAQC,UACvBnC,EAAE,qBAAqBoC,KAAK,KAG9B,IAAIC,EAAOZ,KAAKa,MAAMN,EAASK,MAC/BE,QAAQC,IAAIH,GACZ/B,EAAiBN,EAAE,qBAAqByC,UAAU,CAChDC,QAASL,EAAKK,QACdL,KAAMA,EAAKM,YACXC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXC,cAAc,EACdC,aAAc,WACZhD,EAAE,sCAAsCY,SAAS,4BACjDZ,EAAE,sBAAsBY,SAAS,kCAItCqC,OAAO,WACRnC,EAAUL,UAchB,MAAO,CACLyC,KAAM,WACJlD,EAAEmD,UAAUC,MAAM,WAVpBpD,EAAEE,GAAYmD,GAAG,SAAU,WACzBrC,MAEFhB,EAAEG,GAAUkD,GAAG,SAAU,WACvBrC","sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'local_edwiserreports/jquery.dataTables',\n    'local_edwiserreports/dataTables.bootstrap4'\n], function (\n    $,\n    ajax\n) {\n    'use strict';\n\n    // Field group checkbox\n    var cfCheckbox = '.field .custom-field-checkbox';\n    var cfSelect = '.reports-filter-body .custom-field-select';\n    var cfCohort = '#wdm-cohort-select';\n    var cfCourse = '#wdm-course-select';\n    var cfPreviewTable = null;\n\n    var cfPreviewLoader = {\n        selector : '.reports-preview-body .reports-preview-content.loader',\n\n        show : function() {\n            $(this.selector).removeClass('d-none').addClass('d-flex');\n        },\n\n        hide : function() {\n            $(this.selector).removeClass('d-flex').addClass('d-none');\n        }\n    }\n\n    var cfPreview = {\n        selector : '.reports-preview-body .reports-preview-content',\n\n        show : function() {\n            $(this.selector + ':not(.loader)').removeClass('d-none').addClass('d-flex');\n            cfPreviewLoader.hide();\n        },\n\n        hide : function() {\n            $(this.selector + ':not(.loader)').removeClass('d-flex').addClass('d-none');\n            cfPreviewLoader.show();\n        },\n\n        empty : function() {\n            $(this.selector + '.empty').removeClass('d-none').addClass('d-flex');\n            $(this.selector + ':not(.empty)').removeClass('d-flex').addClass('d-none');\n            cfPreviewLoader.hide();\n        }\n    }\n\n    function getCustomReportsData() {\n        var selectedFields = [];\n        $(cfCheckbox + \":checked\").each(function() {\n            selectedFields.push($(this).val());\n        });\n\n        var getCustomReportsData = ajax.call([{\n            methodname: 'local_edwiserreports_get_customreports_data',\n            args: {\n                params: JSON.stringify({\n                    fields : selectedFields,\n                    cohort : $(cfCohort).val(),\n                    courses : [$(cfCourse).val()]\n                })\n            }\n        }]);\n\n        if (selectedFields.length == 0) {\n            cfPreview.empty();\n        } else {\n            cfPreview.hide();\n            getCustomReportsData[0].done(function(response) {\n                if (response.success) {\n                    if (cfPreviewTable) {\n                        cfPreviewTable.clear().destroy();\n                        $('#cr-preview-table').html('');\n                    }\n\n                    var data = JSON.parse(response.data);\n                    console.log(data);\n                    cfPreviewTable = $('#cr-preview-table').DataTable({\n                        columns: data.columns,\n                        data: data.reportsdata,\n                        bInfo: false,\n                        bFilter: false,\n                        searching: false,\n                        lengthChange: false,\n                        drawCallback: function() {\n                            $('.dataTables_paginate > .pagination').addClass('pagination-sm pull-right');\n                            $('.dataTables_filter').addClass('pagination-sm pull-right');\n                        }\n                    });\n                }\n            }).always(function() {\n                cfPreview.show();\n            });\n        }\n    }\n\n    function customReportServiceInit() {\n        $(cfCheckbox).on('change', function () {\n            getCustomReportsData();\n        });\n        $(cfSelect).on('change', function () {\n            getCustomReportsData();\n        });\n    }\n\n    return {\n        init : function () {\n            $(document).ready(function () {\n                customReportServiceInit();\n            });\n        }\n    }\n});\n"],"file":"customreportsblock.min.js"}