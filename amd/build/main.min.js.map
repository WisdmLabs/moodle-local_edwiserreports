<<<<<<< HEAD
{"version":3,"sources":["main.js"],"names":["define","accessInfo","activeCourses","activeUsers","courseProgress","inActiveUsers","lpStatsBlock","realTimeUsers","todaysActivity","notif","func","status","notifyListner","event","blockName","getKeyByValue","executeFunctionByName","init","obj","value","prop","hasOwnProperty"],"mappings":"AAAA,aAEAA,OAAO,CAAC,wCAAyC,2CAA4C,yCAA0C,4CAA6C,2CAA4C,qCAAsC,2CAA4C,4CAA6C,+BAAgC,SAAUC,EAAYC,EAAeC,EAAaC,EAAgBC,EAAeC,EAAcC,EAAeC,GAC3e,IAAIC,EAAQ,CACVN,YAAa,CACXO,KAAMP,EACNQ,QAAQ,GAEVP,eAAgB,CACdM,KAAMN,EACNO,QAAQ,GAEVJ,cAAe,CACbG,KAAMH,EACNI,QAAQ,GAEVV,WAAY,CACVS,KAAMT,EACNU,QAAQ,GAEVL,aAAc,CACZI,KAAMJ,EACNK,QAAQ,GAEVN,cAAe,CACbK,KAAML,EACNM,QAAQ,GAEVH,eAAgB,CACdE,KAAMF,EACNG,QAAQ,GAEVT,cAAe,CACbQ,KAAMR,EACNS,QAAQ,IAQRC,EAAgB,SAAuBC,GACzCJ,EAAMI,GAAOF,QAAS,EACtB,IAAIG,EAAYC,EAAcN,GAAO,GAEjCK,GACFE,EAAsBF,IAStBE,EAAwB,SAA+BF,GACzDL,EAAMK,GAAWJ,KAAKO,KAAKL,IAUzBG,EAAgB,SAAuBG,EAAKC,GAC9C,IAAK,IAAIC,KAAQF,EACf,GAAIA,EAAIG,eAAeD,IACjBF,EAAIE,GAAMT,SAAWQ,EACvB,OAAOC,EAKb,OAAO,MAaT,MAAO,CACLH,KAPS,WACT,IAAIH,EAAYC,EAAcN,GAAO,GACrCA,EAAMK,GAAWJ,KAAKO,KAAKL","sourcesContent":["define([\r\n    'local_edwiserreports/block_accessinfo',\r\n    'local_edwiserreports/block_activecourses',\r\n    'local_edwiserreports/block_activeusers',\r\n    'local_edwiserreports/block_courseprogress',\r\n    'local_edwiserreports/block_inactiveusers',\r\n    'local_edwiserreports/block_lpstats',\r\n    'local_edwiserreports/block_realtimeusers',\r\n    'local_edwiserreports/block_todaysactivity',\r\n    'local_edwiserreports/common'\r\n], function(\r\n    accessInfo,\r\n    activeCourses,\r\n    activeUsers,\r\n    courseProgress,\r\n    inActiveUsers,\r\n    lpStatsBlock,\r\n    realTimeUsers,\r\n    todaysActivity\r\n) {\r\n    var notif = {\r\n        activeUsers: {\r\n            func: activeUsers,\r\n            status: false\r\n        },\r\n        courseProgress: {\r\n            func: courseProgress,\r\n            status: false\r\n        },\r\n        realTimeUsers: {\r\n            func: realTimeUsers,\r\n            status: false\r\n        },\r\n        accessInfo: {\r\n            func: accessInfo,\r\n            status: false\r\n        },\r\n        lpStatsBlock: {\r\n            func: lpStatsBlock,\r\n            status: false\r\n        },\r\n        inActiveUsers: {\r\n            func: inActiveUsers,\r\n            status: false\r\n        },\r\n        todaysActivity: {\r\n            func: todaysActivity,\r\n            status: false\r\n        },\r\n        activeCourses: {\r\n            func: activeCourses,\r\n            status: false\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Notify listner to listen if done execution\r\n     * @param  {Event} event Triggered event\r\n     */\r\n    var notifyListner = function(event) {\r\n        notif[event].status = true;\r\n        var blockName = getKeyByValue(notif, false);\r\n        if (blockName) {\r\n            executeFunctionByName(blockName);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Execute function by name\r\n     * @param  {string} blockName Block Name\r\n     */\r\n    var executeFunctionByName = function(blockName) {\r\n        notif[blockName].func.init(notifyListner);\r\n    };\r\n\r\n    /**\r\n     * Get key by value\r\n     * @param  {object} obj Object on search\r\n     * @param  {string} value Value to search\r\n     * @return {string} object key\r\n     */\r\n    var getKeyByValue = function(obj, value) {\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                if (obj[prop].status === value) {\r\n                    return prop;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Init main.js\r\n     */\r\n    var init = function() {\r\n        var blockName = getKeyByValue(notif, false);\r\n        notif[blockName].func.init(notifyListner);\r\n    };\r\n\r\n    // Must return the init function\r\n    return {\r\n        init: init\r\n    };\r\n});\r\n"],"file":"main.min.js"}
=======
{"version":3,"sources":["main.js"],"names":["define","accessInfo","activeCourses","activeUsers","courseProgress","inActiveUsers","lpStatsBlock","realTimeUsers","todaysActivity","notif","func","status","notifyListner","event","blockName","getKeyByValue","executeFunctionByName","init","obj","value","prop","hasOwnProperty"],"mappings":"AAAA,aAwBAA,OAAO,CAAC,wCAAyC,2CAA4C,yCAA0C,4CAA6C,2CAA4C,qCAAsC,2CAA4C,4CAA6C,+BAAgC,SAAUC,EAAYC,EAAeC,EAAaC,EAAgBC,EAAeC,EAAcC,EAAeC,GAC3e,IAAIC,EAAQ,CACVN,YAAa,CACXO,KAAMP,EACNQ,QAAQ,GAEVP,eAAgB,CACdM,KAAMN,EACNO,QAAQ,GAEVJ,cAAe,CACbG,KAAMH,EACNI,QAAQ,GAEVV,WAAY,CACVS,KAAMT,EACNU,QAAQ,GAEVL,aAAc,CACZI,KAAMJ,EACNK,QAAQ,GAEVN,cAAe,CACbK,KAAML,EACNM,QAAQ,GAEVH,eAAgB,CACdE,KAAMF,EACNG,QAAQ,GAEVT,cAAe,CACbQ,KAAMR,EACNS,QAAQ,IAQRC,EAAgB,SAAuBC,GACzCJ,EAAMI,GAAOF,QAAS,EACtB,IAAIG,EAAYC,EAAcN,GAAO,GAEjCK,GACFE,EAAsBF,IAStBE,EAAwB,SAA+BF,GACzDL,EAAMK,GAAWJ,KAAKO,KAAKL,IAUzBG,EAAgB,SAAuBG,EAAKC,GAC9C,IAAK,IAAIC,KAAQF,EACf,GAAIA,EAAIG,eAAeD,IACjBF,EAAIE,GAAMT,SAAWQ,EACvB,OAAOC,EAKb,OAAO,MAaT,MAAO,CACLH,KAPS,WACT,IAAIH,EAAYC,EAAcN,GAAO,GACrCA,EAAMK,GAAWJ,KAAKO,KAAKL","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'local_edwiserreports/block_accessinfo',\n    'local_edwiserreports/block_activecourses',\n    'local_edwiserreports/block_activeusers',\n    'local_edwiserreports/block_courseprogress',\n    'local_edwiserreports/block_inactiveusers',\n    'local_edwiserreports/block_lpstats',\n    'local_edwiserreports/block_realtimeusers',\n    'local_edwiserreports/block_todaysactivity',\n    'local_edwiserreports/common'\n], function(\n    accessInfo,\n    activeCourses,\n    activeUsers,\n    courseProgress,\n    inActiveUsers,\n    lpStatsBlock,\n    realTimeUsers,\n    todaysActivity\n) {\n    var notif = {\n        activeUsers: {\n            func: activeUsers,\n            status: false\n        },\n        courseProgress: {\n            func: courseProgress,\n            status: false\n        },\n        realTimeUsers: {\n            func: realTimeUsers,\n            status: false\n        },\n        accessInfo: {\n            func: accessInfo,\n            status: false\n        },\n        lpStatsBlock: {\n            func: lpStatsBlock,\n            status: false\n        },\n        inActiveUsers: {\n            func: inActiveUsers,\n            status: false\n        },\n        todaysActivity: {\n            func: todaysActivity,\n            status: false\n        },\n        activeCourses: {\n            func: activeCourses,\n            status: false\n        }\n    };\n\n    /**\n     * Notify listner to listen if done execution\n     * @param  {Event} event Triggered event\n     */\n    var notifyListner = function(event) {\n        notif[event].status = true;\n        var blockName = getKeyByValue(notif, false);\n        if (blockName) {\n            executeFunctionByName(blockName);\n        }\n    };\n\n    /**\n     * Execute function by name\n     * @param  {string} blockName Block Name\n     */\n    var executeFunctionByName = function(blockName) {\n        notif[blockName].func.init(notifyListner);\n    };\n\n    /**\n     * Get key by value\n     * @param  {object} obj Object on search\n     * @param  {string} value Value to search\n     * @return {string} object key\n     */\n    var getKeyByValue = function(obj, value) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                if (obj[prop].status === value) {\n                    return prop;\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Init main.js\n     */\n    var init = function() {\n        var blockName = getKeyByValue(notif, false);\n        notif[blockName].func.init(notifyListner);\n    };\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});\n"],"file":"main.min.js"}
>>>>>>> dev
